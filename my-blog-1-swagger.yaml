openapi: 3.0.0
info:
  version: "1"
  title: My Personal Blog
  description: "This is the My Personal Blog"
  contact:
    name: My Personal Blog
    url: https://personalblog.com
    email: info@personalblog.com
servers:
  - description: Dev
    url: "http://localhost:4000/api/v1"

tags:
  - name: Auth
    description: Authentication Endpoints (Public)
  - name: Articles
    description: Article Endpoints (Public + Private)
  - name: Comment
    description: Comment Endpoints (Private)
  - name: User
    description: User Endpoints (Admin only)
paths:
  "/auth/signup":
    post:
      description: create a new account
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Munir Tushar
                email:
                  type: string
                  format: email
                  example: example@gmail.com
                password:
                  type: string
                  format: password
              required: [name, email, password]
      responses:
        "201":
          description: Signup Successfully
          content:
            "application/json":
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 201
                  message:
                    type: string
                    example: Signup successfully
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: "2sooadoasofuas08304k3n4safo4hb0s9f82"
              links:
                type: object
                properties:
                  self:
                    type: string
                    example: "auth/signup"
                  signin:
                    type: string
                    example: "auth/signin"
        "400":
          description: Bad Request
          content:
            "application/json":
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 400
                  error:
                    type: string
                    example: Bad Request
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: email
                        message:
                          type: string
                          example: Invalid Email
  "/auth/signin":
    post:
      description: signin your account
      tags: [Auth]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: example@gmail.com
                password:
                  type: string
                  format: password
              required: [email, password]
      responses:
        "200":
          description: Signin Successfully
          content:
            "application/json":
              schema:
                type: object
                properties:
                  code:
                    type: integer
                    format: int32
                    example: 200
                  message:
                    type: string
                    example: Signin successfully
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: "2sooadoasofuas08304k3n4safo4hb0s9f82"
              links:
                type: object
                properties:
                  self:
                    type: string
                    example: "auth/signin"
        "400":
          $ref: "#/components/responses/400"
  "articles":
    get:
      tags: [Articles]
      description: Retrive all published articles
      parameters:
        - $ref: "#/components/parameters/pageParam"
        - $ref: "#/components/parameters/limitParam"

components:
  responses:
    "400":
      description: Bad Request
      content:
        "application/json":
          schema:
            type: object
            properties:
              code:
                type: integer
                format: int32
                example: 400
              error:
                type: string
                example: Bad Request
              data:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: email
                    message:
                      type: string
                      example: Invalid Email
  parameters:
    pageParam:
      in: query
      name: page
      description: current page number
      schema:
        type: integer
        format: int32
        example: 2
    limitParam:
      in: query
      name: limit
      description: maximum item to be returned
      schema:
        type: integer
        format: int32
        example: 10
